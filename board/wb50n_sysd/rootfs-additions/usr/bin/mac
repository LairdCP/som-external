#!/bin/sh

MAC_ADDRESS_PARAM_LEN=17
fw_opt=
enable_write=false
enable_erase=false
writes="1 2"

usage()
{
	echo "usage: write: ${0##*/} [-nand] [-f] [-s] xx:xx:xx:xx:xx:xx|xxxxxxxxxxxx"
	echo "       read:  ${0##*/} [-nand]"
	echo "-nand - uses uboot environment blocks in NAND"
	echo "-f    - writes addresses into uboot environment"
	echo "-s    - writes only once (programs only single block)"
}

read_mac()
{
	fw_printenv ${fw_opt} -n "${1}"
}

print_macs()
{
	printf "Eth0: %s\n" "$(read_mac "ethaddr")"
}

write_macs()
{
	mac1="${1}"

	if ${enable_write}; then
		for i in ${writes} ; do
			fw_setenv ${fw_opt} ethaddr "${mac1}"
		done
	else
		printf "simulate write Eth0: %s\n" "${mac1}"
		printf "(specify -f to write)\n"
	fi
}

erase_macs() {
	${enable_erase} || return

	for i in ${writes}; do
		fw_setenv ${fw_opt} ethaddr
	done
}

while true ; do
	case "${1}" in
		"-nand") shift ; fw_opt="-c /etc/fw_env_flash.config" ;;
		"-f") shift ; enable_write=true ;;
		"-e") shift ; enable_erase=true ;;
		"-s") shift ; writes=1 ;;
		"--") shift; break ;;
		*) break ;;
	esac
done

case "${#}" in
	0)	enable_erase && erase_macs || print_macs ; exit ;;
	1)	;;
	*)	usage ; exit ;;
esac

# Support MAC address from bar code scanner (without ':'), production request
case "${1}" in
	*:*)
		MAC_ADDRESS="${1}"
		;;
	*)
		MAC_ADDRESS=$(echo "${1}" | sed 's/../&:/g;s/:$//')
		;;
esac

[ "${#MAC_ADDRESS}" -ne "${MAC_ADDRESS_PARAM_LEN}" ] && usage && exit

write_macs "${MAC_ADDRESS}"
print_macs
