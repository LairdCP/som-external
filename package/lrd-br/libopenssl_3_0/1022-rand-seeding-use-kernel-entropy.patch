From 13384b615fff153d1f32511e5b9a89e11a5c42c2 Mon Sep 17 00:00:00 2001
From: Doug Smith <doug.smith@lairdconnect.com>
Date: Tue, 29 Aug 2023 09:48:29 -0400
Subject: [PATCH 21/82] rand seeding: use kernel entropy

Use kernel entropy for rand seeding.
---
 providers/implementations/rands/seeding/rand_unix.c | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/providers/implementations/rands/seeding/rand_unix.c b/providers/implementations/rands/seeding/rand_unix.c
index 9a936d800d..97eec8d365 100644
--- a/providers/implementations/rands/seeding/rand_unix.c
+++ b/providers/implementations/rands/seeding/rand_unix.c
@@ -23,6 +23,7 @@
 
 #ifdef __linux
 # include <sys/syscall.h>
+# include <sys/random.h>
 # ifdef DEVRANDOM_WAIT
 #  include <sys/shm.h>
 #  include <sys/utsname.h>
@@ -388,7 +389,9 @@ static ssize_t syscall_random(void *buf, size_t buflen)
 #  endif /* !__DragonFly__ */
 
     /* Linux supports this since version 3.17 */
-#  if defined(__linux) && defined(__NR_getrandom)
+#  if defined(__linux) && defined(__NR_getrandom) && defined(GRND_RANDOM)
+    return syscall(__NR_getrandom, buf, buflen, GRND_RANDOM);
+#  elif defined(__linux) && defined(__NR_getrandom)
     return syscall(__NR_getrandom, buf, buflen, 0);
 #  elif (defined(__FreeBSD__) || defined(__NetBSD__)) && defined(KERN_ARND)
     return sysctl_random(buf, buflen);
-- 
2.34.1

